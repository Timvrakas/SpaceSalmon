//AUTOGENERATED! DO NOT EDIT!

#pragma once
#include <stdint.h>
#include "{{path}}"
#include "../rx_tx_log/SlateServer.hpp"

class {{slate}}_t : public Slate
{
private:
    static constexpr uint64_t metaslate_hash = {{metaslate_hash}};

public:
    {% for id,channel in channels.items() %}
    SlateField<{{ channel.type }}> {{ id }} = {{ channel.default }}; // {{channel.desc}}, in {{channel.unit}}
    {% endfor %}

    typedef struct { uint8_t payload[{{total_len}}]; } pkt_t;

    void seralize(pkt_t &pkt){
        seralize_field(pkt,metaslate_hash,0);
        {% for id,channel in channels.items() %}
        seralize_field(pkt,{{ id }},{{channel.offset}});
        {% endfor %}
    }

{% for type in types.keys() %}
    void set_{{type}}_field(uint16_t offset, {{type}} value){
        switch (offset)
        {
        {% for id,channel in channels.items() if channel.mutable and channel.type == type %}
        case {{channel.offset}}:
            {{id}} = value;
            break;
        {% endfor %}
        default:
            break;
        }
    }

{% endfor %}

    static constexpr uint8_t metaslate_blob[] = { {{metaslate_blob}} };
    const uint64_t& get_metaslate_hash(){ return metaslate_hash; }

    SlateServer<{{slate}}_t> server;
};

